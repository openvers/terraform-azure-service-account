name: 'Terraform Workflow Dispatch'

on:
  workflow_dispatch:
    inputs:
      terraform_operation:
        description: "Terraform operation: plan, apply, destroy"
        required: true
        default: "plan"
        type: choice
        options:
          - plan
          - apply
          - destroy

permissions:
  id-token: write
  contents: read
  issues: write

env:
  ARM_CLIENT_ID: "${{ secrets.AZURE_CLIENT_ID }}"
  ARM_CLIENT_SECRET: "${{ secrets.AZURE_CLIENT_SECRET }}"
  ARM_SUBSCRIPTION_ID: "${{ secrets.AZURE_SUBSCRIPTION_ID }}"
  ARM_TENANT_ID: "${{ secrets.AZURE_TENANT_ID }}"

jobs:
    terraform-dispatch-read:
      name: Terraform Read Privilege Job
      if: "${{ github.event.act || github.event.inputs.terraform_operation == 'plan' }}"
      runs-on: ubuntu-latest
      defaults:
        run:
          working-directory: "./test"

      steps:
        - name: Checkout Code
          uses: actions/checkout@v3
  
        - name: Setup Terraform
          uses: hashicorp/setup-terraform@v3
          with:
            cli_config_credentials_token: ${{ secrets.TF_API_TOKEN_AZURE_WORKSPACE }}
  
        - name: Terraform init
          run: terraform init
  
        - name: Terraform plan
          run: terraform plan
    
    terraform-dispatch-write:
      name: Terraform Write Privilege Job
      if: "${{ github.event.act || github.event.inputs.terraform_operation == 'apply' || github.event.inputs.terraform_operation == 'destroy' }}"
      runs-on: ubuntu-latest
      environment: production
      defaults:
        run:
          working-directory: "test"
      
      env:
        ARM_CLIENT_ID: "${{ secrets.AZURE_CLIENT_ID }}"
        ARM_CLIENT_SECRET: "${{ secrets.AZURE_CLIENT_SECRET }}"
      
      steps:
        - name: Checkout Code
          uses: actions/checkout@v3
  
        - name: Setup Terraform
          uses: hashicorp/setup-terraform@v3
          with:
            cli_config_credentials_token: ${{ secrets.TF_API_TOKEN_AZURE_WORKSPACE }}
        
        - name: Terraform init
          run: terraform init

        - name: Terraform apply
          if: "${{ github.event.act || github.event.inputs.terraform_operation == 'apply' }}"
          run: terraform apply --auto-approve
  
        - name: Terraform destroy
          if: "${{ github.event.act || github.event.inputs.terraform_operation == 'destroy' }}"
          uses: nick-fields/retry@v3
          with:
            timeout_minutes: 5
            max_attempts: 3
            retry_on: error
            command: 'terraform -chdir=test destroy --auto-approve'
