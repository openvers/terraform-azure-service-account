name: 'Terraform Workflow Dispatch'

on:
    workflow_dispatch:
      inputs:
        terraform_operation:
          description: "Terraform operation: plan, apply, destroy"
          required: true
          default: "plan"
          type: choice
          options:
            - plan
            - apply
            - destroy

permissions:
  id-token: write
  contents: read
  issues: write

env:
  ARM_CLIENT_ID: "${{ secrets.AZURE_CLIENT_ID }}"
  ARM_CLIENT_SECRET: "${{ secrets.AZURE_CLIENT_SECRET }}"
  ARM_SUBSCRIPTION_ID: "${{ secrets.AZURE_SUBSCRIPTION_ID }}"
  ARM_TENANT_ID: "${{ secrets.AZURE_TENANT_ID }}"

jobs:
    terraform-read:
      name: Terraform Read Privilege Job
      runs-on: ubuntu-latest
      defaults:
        run:
          working-directory: "./test"

      steps:
        - name: Checkout Code
          uses: actions/checkout@v3
  
        - name: Setup Terraform
          uses: hashicorp/setup-terraform@v3
          with:
            cli_config_credentials_token: ${{ secrets.TF_API_TOKEN_AZURE_WORKSPACE }}
  
        - name: Terraform init
          if: "${{ env.ARM_CLIENT_ID != '' && env.ARM_SUBSCRIPTION_ID != '' && env.ARM_TENANT_ID != ''}}"
          run: terraform init
  
        - name: Terraform plan
          run: terraform plan
          if: "${{ github.event.inputs.terraform_operation == 'plan' }}"
    
    terraform-write:
      if: "${{ github.event.inputs.terraform_operation == 'apply' || github.event.inputs.terraform_operation == 'destroy' }}"
      name: Terraform Write Privilege Job
      runs-on: ubuntu-latest
      environment: production
      needs: [terraform-read]
      defaults:
        run:
          working-directory: "./test"
      env:
        ARM_CLIENT_ID: "${{ secrets.AZURE_CLIENT_ID }}"
        ARM_CLIENT_SECRET: "${{ secrets.AZURE_CLIENT_SECRET }}"
      
      steps:
        - name: Terraform apply
          run: terraform apply --auto-approve
          if: "${{ github.event.inputs.terraform_operation == 'apply' }}"
  
        - name: Terraform destroy
          run: terraform destroy --auto-approve
          if: "${{ github.event.inputs.terraform_operation == 'destroy' }}"